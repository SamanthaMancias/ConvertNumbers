# -*- coding: utf-8 -*-
"""convertNumbers

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zR7O9rRbJshnuFLBHjGAP0PgKL6GBIR1
"""

import time

def read_file(file_path):
    """
    Read the content of a file and return it as a list of numbers.

    Args:
        file_path (str): The path to the file.

    Returns:
        list: A list of numbers read from the file.
    """
    try:
        with open(file_path, 'r') as file:
            numbers = file.read().split()
        return numbers
    except FileNotFoundError as e:
        print(f"Error: File not found - {e}")
        return None
    except Exception as e:
        print(f"Error reading file: {e}")
        return None

def convert_numbers(number_list):
    """
    Convert decimal numbers to binary and hexadecimal.

    Args:
        number_list (list): List of decimal numbers.

    Returns:
        tuple: A tuple containing a dictionary of conversion results and the elapsed time.
    """
    if not number_list:
        return None

    start_time = time.time()

    conversion_results = {}
    for number in number_list:
        try:
            decimal_number = int(number)
            binary_representation = bin(decimal_number)[2:]  # Remove the '0b' prefix
            hexadecimal_representation = hex(decimal_number)[2:]  # Remove the '0x' prefix

            # Store the results
            conversion_results[decimal_number] = {
                'binary': binary_representation,
                'hexadecimal': hexadecimal_representation
            }
        except ValueError:
            print(f"Invalid data: {number}")

    elapsed_time = time.time() - start_time

    return conversion_results, elapsed_time

def write_results_to_file(results):
    """
    Write conversion results to a file.

    Args:
        results (dict): Dictionary containing conversion results.
    """
    with open('ConversionResults.txt', 'w') as file:
        for decimal_number, conversions in results.items():
            file.write(f"Decimal: {decimal_number}, Binary: {conversions['binary']}, Hexadecimal: {conversions['hexadecimal']}\n")

def main(file_path):
    """
    Main function to convert numbers, print results, and write to a file.

    Args:
        file_path (str): The path to the file.
    """
    numbers = read_file(file_path)

    if numbers is None:
        return

    results = dict(zip(["conversion_results", "elapsed_time"], convert_numbers(numbers)))

    print(f"Elapsed Time: {results['elapsed_time']:.6f} seconds")

    for decimal_number, conversions in results["conversion_results"].items():
        print(f"Decimal: {decimal_number}, Binary: {conversions['binary']}, Hexadecimal: {conversions['hexadecimal']}")

    write_results_to_file(results["conversion_results"])

if __name__ == "__main__":
    # Use a variable name conforming to snake_case naming style
    file_path = 'fileWithDataP2.txt'
    main(file_path)